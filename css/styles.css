/*
=============== 
Fonts
===============
*/
@font-face {
    font-family: "vazir";
    src: url("../fonts/vazir/Vazir-Medium-FD-WOL.woff") format("woff2"),
        url("../fonts/vazir/Vazir-Medium-FD-WOL.woff") format("woff"),
        url("../fonts/vazir/Vazir-Medium-FD-WOL.ttf") format("truetype");
}

:root {
    --clr-primary-1: #2f3e46;
    --clr-primary-2: #354f52;
    --clr-primary-3: #52796f;
    --clr-primary-4: #84a98c;
    --clr-primary-5: #cad2c5;
    --clr-grey-1: #102a42;
    --clr-grey-2: #617d98;
    --clr-grey-3: rgb(241, 245, 248);
    --clr-white: #fff;
    --ff-primary: "vazir", sans-serif;
    --transition: all 0.3s linear;
    --radius: 0.5rem;
    --light-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    --dark-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    --max-width: 1170px;
}

/*
=============== 
Global Styles
===============
*/

*,
::after,
::before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: var(--ff-primary);
    background: var(--clr-white);
    color: var(--clr-grey-1);
    line-height: 1.5;
    font-size: 0.875rem;
}

ul {
    list-style-type: none;
}

a {
    text-decoration: none;
}

img {
    width: 100%;
    display: block;
}

h1,
h2,
h3,
h4 {
    line-height: 1.25;
    margin-bottom: 0.75rem;
    font-family: var(--ff-primary);
}

h1 {
    font-size: 3rem;
}

h2 {
    font-size: 2rem;
}

h3 {
    font-size: 1.25rem;
}

h4 {
    font-size: 0.875rem;
}

p {
    margin-bottom: 1.25rem;
    color: var(--clr-grey-2);
}

@media screen and (min-width: 800px) {
    h1 {
        font-size: 4rem;
    }

    h2 {
        font-size: 2.5rem;
    }

    h3 {
        font-size: 1.75rem;
    }

    h4 {
        font-size: 1rem;
    }

    body {
        font-size: 1rem;
    }

    h1,
    h2,
    h3,
    h4 {
        line-height: 1;
    }
}

/*
=============== 
Global classes
===============
*/
.section {
    padding: 5rem 0;
}

.section-center {
    width: 90vw;
    margin: 0 auto;
    max-width: var(--max-width);
}

@media screen and (min-width: 992px) {
    .section-center {
        width: 95vw;
    }
}

.section-title {
    margin-bottom: 4rem;
    text-align: center;
}

.btn {
    background: var(--clr-primary-2);
    color: var(--clr-white);
    padding: 0.375rem 0.75rem;
    display: inline-block;
    transition: var(--transition);
    font-size: 0.875rem;
    font-family: var(--ff-primary);
    border: 2px solid transparent;
    cursor: pointer;
    box-sizing: 0 1px 3px rgba(0, 0, 0, 0.2);
    border-radius: var(--radius);
}

.btn:hover {
    color: var(--clr-primary-1);
    background: var(--clr-primary-3);
}

.underline {
    width: 5rem;
    height: 0.25rem;
    background: var(--clr-primary-2);
    margin-bottom: 1.25rem;
    margin-left: auto;
    margin-right: auto;
    transition: var(--transition);
}

.bg-gray {
    background: var(--clr-grey-3);
}

/*
=============== 
Navbar
===============
*/

.nav-links {
    display: none;
}

.nav {
    background: var(--clr-primary-5);
    height: 4.5rem;
    padding: 1rem;
    transition: var(--transition);
}

.nav-center {
    width: 100%;
    max-width: var(--max-width);
    margin: 0 auto;
}

.nav-header {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
}

.nav-header h3 {
    font-size: 1.75rem;
}

.nav-btn {
    justify-self: end;
    background: transparent;
    border-color: transparent;
    color: var(--clr-primary-2);
    font-size: 2rem;
    cursor: pointer;
}

@media screen and (min-width: 768px) {
    .nav-btn {
        display: none;
    }

    .nav-links {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        -moz-column-gap: 2rem;
             column-gap: 2rem;
        justify-items: center;
        justify-self: end;
    }

    .nav-links a {
        color: var(--clr-grey-1);
        transition: var(--transition);
    }

    .nav-links a:hover {
        color: var(--clr-primary-4);
    }

    .nav-center {
        display: grid;
        grid-template-columns: auto 1fr;
        align-items: center;
    }
}

.navbar-fixed {
    position: fixed;
    width: 100%;
    top: 0;
    left: 0;
    background: var(--clr-primary-5);
    box-shadow: var(--light-shadow);
    z-index: 5;
}

/*
=============== 
Sidebar
===============
*/

.sidebar {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--clr-grey-3);
    z-index: 4;
    display: grid;
    /* justify-content: center;
    align-items: center; */
    place-content: center;
    transform: translateX(100%);
    transition: var(--transition);
}

.show-sidebar {
    transform: translateX(0);
}

.close-btn {
    position: absolute;
    top: 1rem;
    left: 1rem;
    /* close-btn will place in the top left */
    font-size: 3rem;
    background: transparent;
    border: transparent;
    color: #bb2525;
    cursor: pointer;
    transition: var(--transition);
}

.close-btn:hover {
    color: #e66b6b;
}

.sidebar-links {
    text-align: center;
}

.sidebar-links a {
    font-size: 1.5rem;
    color: var(--clr-grey-2);
    display: inline-block;
    /*if we want to give the sidebar a Margin-bottom we need disply inlineblock*/
    margin-bottom: 1.5rem;
}

.sidebar-links:hover {
    color: var(--clr-primary-4);
}

.social-icons {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    justify-items: center;
    -moz-column-gap: 2rem;
         column-gap: 2rem;
    /* space between icons */
    margin-top: 3rem;
    /*space from top*/
}

.social-icons a {
    font-size: 1.5rem;
    color: var(--clr-grey-1);
    transition: var(--transition);
}

.social-icons a:hover {
    color: var(--clr-primary-4);
}

/*
=============== 
Hero
===============
*/

.hero {
    background: var(--clr-primary-5);
}

.hero .underline {
    margin-right: 0;
    margin-bottom: 1rem;
}

.hero-img {
    display: none;
}

.hero-center {
    min-height: calc(100vh - 4.5rem);
    /* we had a 4.5rem of margin in navbar */
    display: grid;
    place-items: center;
}

.hero-info h4 {
    color: var(--clr-grey-2);
    margin-top: 2rem;
}

.hero-btn {
    margin-top: 1.25rem;
}

.hero-icons {
    justify-items: start;
    /* start means right=0 not much of diffrent though */
}

@media screen and (min-width: 992px) {
    .hero-img {
        display: block;
        position: relative;
        /*  for: .hero-img::before */
    }

    .hero-center {
        grid-template-columns: 1fr 1fr;
        /* put both article:hero-info and hero-img in the one column  */
        -moz-column-gap: 10rem;
             column-gap: 10rem;
    }

    .hero-photo {
        max-width: 25rem;
        max-height: 30rem;
        -o-object-fit: cover;
           object-fit: cover;
        border-radius: var(--radius);
        position: relative;
        /**/
    }

    .hero-img::before,
    .about-img::before {
        content: "";
        position: absolute;
        /*parent=hero-img we want the border to be setup on our hero-img*/
        width: 100%;
        height: 100%;
        border: 0.25rem solid var(--clr-primary-2);
        border-radius: var(--radius);
        top: 2rem;
        right: -2rem;
        /*so the border moves to the bottom and right now we have the border but its over our hero-photo we want it under so parent = line 359*/
    }
}

/*
=============== 
About
===============
*/
.about-photo {
    max-width: 25rem;
    max-height: 30rem;
    -o-object-fit: cover;
       object-fit: cover;
    border-radius: var(--radius);
    position: relative;
}

.about-center {
    margin-top: 2rem;
    margin-bottom: 2rem;
    display: grid;
    gap: 3rem;
}

.about-img {
    justify-self: center;
}

.about-title {
    margin-bottom: 2rem;
}

.about-title .underline {
    width: 9.4rem;
    margin-top: 1.25rem;
    margin-right: 0;
    /*goes directly under درباره ما*/
}

@media screen and (min-width: 992px) {
    .about-center {
        grid-template-columns: 1fr 1fr;
    }

    .about-img {
        position: relative;
    }

    .about-info {
        align-self: center;
    }
}

/*
=============== 
services
===============
*/

.service {
    background: var(--clr-white);
    padding: 3.25rem 1rem;
    border-radius: var(--radius);
    text-align: center;
    transition: var(--transition);
}

.service .underline {
    font-size: 12rem;
    margin-bottom: 2rem;
}

.service h2 {
    font-size: 1.75rem;
}

.section-title .underline {
    margin-top: 1.25rem;
    width: 9rem;
}

.service:hover {
    background: var(--clr-primary-2);
    color: var(--clr-white);
}

.service:hover p {
    color: var(--clr-white);
}

.service:hover .underline {
    background: var(--clr-white);
    /*because we made .underline and its a mix of line and height with the background of gray*/
}

/* this two line are me and only me code cause space have 4 item but span have 5 */
.space h4 {
    padding-bottom: 1.05rem;
}

.span h4 {
    padding-bottom: 0.3rem;
}

/* this two up line are me and only me code cause space have 4 item but span have 5 */



@media screen and (min-width: 676px) {
    .services-center {
        display: grid;
        grid-template-columns: 1fr 1fr;
        -moz-column-gap: 2rem;
             column-gap: 2rem;
    }
}

@media screen and (min-width: 992px) {
    .services-center {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        -moz-column-gap: 2rem;
             column-gap: 2rem;
    }
}

/*
=============== 
projects
===============
*/

.projects-text {
    width: 85vw;
    max-width: 30rem;
    margin: 0 auto;
    /*this margin works like this : 0 from top and bottom and auto from left and right so its always in the middle of screen*/
}

.project {
    background: var(--clr-primary-2);
    position: relative;
    margin-bottom: 2rem;
    border-radius: var(--radius);
}

.project-info {
    position: absolute;
    top: 50%;
    left: 50%;
    /*top 50 and right 50 is another way to put things in the center of screen*/
    transform: translate(-50%, -50%);
    color: var(--clr-white);
    opacity: 0;
    transition: var(--transition);
}

.project-info p {
    color: var(--clr-white);
}

.project:hover .project-info {
    opacity: 1;
}

.project-img {
    transition: var(--transition);
    border-radius: var(--radius);
    height: 15rem;
    -o-object-fit: cover;
       object-fit: cover;
}

.project:hover .project-img {
    opacity: 0.1;
}

.project::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0.25rem solid var(--clr-white);
    border-radius: var(--radius);
    opacity: 0;
    transition: var(--transition);
}

.project:hover::after {
    opacity: 1;
    transform: scale(0.8);
}

@media screen and (min-width: 676px) {
    .projects-center {
        display: grid;
        grid-template-columns: 1fr 1fr;
        -moz-column-gap: 2rem;
             column-gap: 2rem;
    }
}

@media screen and (min-width: 992px) {
    .projects-center {
        grid-template-columns: repeat(3, 1fr);

    }
}

/*TAKE A NOTE HERE -GRID AREA- */
@media screen and (min-width: 1170px) {

    /*FIRST for using grid area we need to first name all a tags in the html to project 1-4*/
    .projects-center {
        /* direction: LTR; */
        /*THIRD now we set the size of our rows*/
        grid-template-rows: 200PX 200px;
        /*FORTH at this point we have to set the areas "A B B": MEANS first row is A second and third rows are B*/
        grid-template-areas:
            "B C D"
            "A A D";
        /*SEVETH last part we need gap obviously P.S we used grid-template-rows we cannot use column-gap it would only gap columns we need gap all the sides so*/
        gap: 2rem;
    }

    .project {
        /*FIFTH at this point it obvius we have a height problem*/
        height: 100%;
    }

    .project-img {
        /*SIXTH we have again height problem for fixing this issue we need to find it class and set the height to the right amount*/
        height: 100%;
    }

    /*SECOND after naming all a tag in html to project 1-4 now we need to name them in css as we can see i named project 1-4 TO A,B,C,D  */
    .project-1 {
        grid-area: A;
    }

    .project-2 {
        grid-area: B;
    }

    .project-3 {
        grid-area: C;
    }

    .project-4 {
        grid-area: D;
    }
}

/*
=============== 
Connect
===============
*/

.connect {
    min-height: 40rem;
    position: relative;
    display: grid;
    place-items: center;
    padding: 10rem 0 5rem 0;
    margin: 5rem 0;

    --webkit-clip-path: polygon{50% 0%, 100% 5%, 100% 95%, 75% 100%, 25% 100%, 0 95%, 0 5%};

    -webkit-clip-path: polygon(50% 0%, 100% 5%, 100% 95%, 75% 100%, 25% 100%, 0 95%, 0 5%);

            clip-path: polygon(50% 0%, 100% 5%, 100% 95%, 75% 100%, 25% 100%, 0 95%, 0 5%);
}

.connect::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--clr-white);
    opacity: 0.7;
    z-index: -1;
}

.video-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover;
    z-index: -2;
}

.video-banner {
    background: var(--clr-primary-5);
    text-align: center;
    padding: 3rem 5rem 12rem 5rem;
    -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 75%, 75% 75%, 75% 100%, 50% 75%, 0% 75%);
            clip-path: polygon(0% 0%, 100% 0%, 100% 75%, 75% 75%, 75% 100%, 50% 75%, 0% 75%);
}

.video-text {
    max-width: 30rem;
}

/*
=============== 
Connect
===============
*/

.skills {
    background: var(--clr-primary-4);
}
.skill h3 {
    color: var(--clr-primary-1);
    margin: 1.5rem 0;
}
.skill {
    margin-bottom: 1.5rem;
}
.skill p {
    color: var(--clr-primary-1);
    margin-bottom: 1.5rem 0;
}

.skill-container {
    background: var(--clr-white);
    height: 1rem;
    width: 100%;
    border-radius: var(--radius);
    position: relative;
}

.skill-value {
    position: absolute;
    top: 0;
    left: 0;
    background: var(--clr-primary-2); /* without height and width skill-value is not visibe */
    height: 100%;
    width: 50%;
    border-radius: var(--radius);
}
.value-90{
    width: 90%;
}
.value-0{
    width: 0%;
}
.value-60{
    width: 60%;
}
.value-20{
    width: 20%;
}

.skill-text {
    position: absolute;
    top: -2rem;
    left: 50%;
    transform: translateX(-50%);
    margin: 0.12rem 0;
}
.text-90{
    left: 90%;
}
.text-0{
    left: 0%;
}   
.text-60{
    left: 60%;
}
.text-20{
    left: 20%;
}

@media screen and (min-width: 768px) {
    .skills-center {
        display: grid;
        grid-template-columns: 1fr 1fr;
        -moz-column-gap: 2rem;
             column-gap: 2rem;
    }
}

/*
=============== 
timeline
===============
*/

.timeline-center {
    width: 80vw;
    max-width: 40rem;
}

.timeline  p {
    margin-bottom: 0;
}

.timeline-item {
    border-top: 2px dashed var(--clr-primary-2);
    padding: 4rem 2rem;
    margin: 0;
    position: relative;
}
.timeline-item:nth-child(even) { /* we can call all even numbers or odds numbers or any number */
    border-left: 2px dashed var(--clr-primary-2);
    border-top-left-radius: 2rem;
    border-bottom-left-radius: 2rem;
    margin-right: 2rem;
    padding-right: 0;
}
.timeline-item:nth-child(odd) { /* we can call all even numbers or odds numbers or any number */
    border-right : 2px dashed var(--clr-primary-2);
    border-top-right-radius: 2rem;
    border-bottom-right-radius: 2rem;
    margin-left: 2rem;
    padding-left: 0;
}
.timeline-item:first-child {
    border-top: 0;
    border-top-right-radius: 0;
}
.timeline-item:last-child {
    border-bottom-left-radius: 0;
}

.number {
    position: absolute;
    top: 50%;
    background: var(--clr-primary-2);
    width: 2rem;
    height: 2rem;
    color: var(--clr-white);
    display: grid;
    place-items: center;
    border-radius: 50%;
    transform: translate(-50%,-50%);
}
.timeline-item:nth-child(even) .number {
    left: 0;
}
.timeline-item:nth-child(odd) .number {
    right: 0; /* we had a margin right in here */
    transform: translate(50%,-50%);
}

/*
=============== 
blog
===============
*/

.blog {
    background: var(--clr-grey-3);
}

.card {
    height: 27rem;
    perspective: 1500px;
    position: relative
}

.card-side {
    position: absolute;
    transition: all 1.5s linear;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden; /* hide the back card */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: var(--radius);
}

.card-front {
    background: var(--clr-white);
}
.card-back {
    background: var(--clr-primary-5);
    transform: rotateY(180deg);
    display: grid;
    place-items: center;
}
.card:hover .card-front {
    transform: translateY(-180deg);
}
.card:hover .card-back{
    transform: translateY(0);
}

.card-front img {
    height: 13rem;
    -o-object-fit: cover;
       object-fit: cover; /* if the img is a cover for a card or any height it must set to cover */
    border-top-left-radius: var(--radius);
    border-top-right-radius: var(--radius);
}

.card-footer img {
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
}

.card-info {
    padding: 1rem 1.5rem;
}

.card-info  p {
    font-size: 0.95rem;
}

.card-footer {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
}
.card-footer p {
    margin-bottom: 0;
    justify-self: end;
    color: var(--clr-primary-2);
    font-size: 0.85rem;
}

.blog-center {
    display: grid;
    grid-template-columns: repeat(auto-fill , minmax(330px , 1fr )); /* using grid like querris */
    gap: 3rem 1rem;
}

/*
=============== 
footer
===============
*/

.footer {
    padding-bottom: 2rem;
    background: #222;
    display: grid;
    place-items: center;/* as justify self and justify icons */
}

.footer .social-icons {
    margin-bottom: 2rem;
}

.footer .social-icon {
    color: var(--clr-primary-2);
}
.footer .social-icon:hover {
    color: var(--clr-primary-5);
}

.footer p {
    font-size: 1.25rem;
    cursor: pointer;
}